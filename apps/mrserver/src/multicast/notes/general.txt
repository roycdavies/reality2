Some thoughts:

The core characteristics of a swarm are created by the individuals being able to communicate with other nearby individuals, so a flock of birds, for example, keeps its cohesion through each bird tracking its neighbours, and adjusting its flight to maintain a safe but close distance.

In the Imersia node scenario, there are a number of core tasks a node needs to perform to be a member of the swarm - this is not necessarily a complete list, just my first hack:

1) It has to deal with entities - currently Companions, Channels and Geobots, and soon also Tokens and Wallets - in the flock of birds analogy, this is the equivalent of ‘swarming’ - the emergent property.

2) It has to provide core capabilities of storage, processing (simple and advanced (eg AI)) and communication (with users and each other) - this is equivalent to ‘flying’ or ‘moving the wings’.  Of note here, on storage, we need to also ensure data is secure and safe, and stored redundantly so if a whole wodge of nodes are wiped out (eg a datacentre being hacked, or simply turning off), the entities stored therein are not lost - so both near and far backup is required.  Some entities are active (Geobots, Tokens, Companions), some passive (Channels, Wallets), and we need to consider what happens if a node dies in the middle of some important task - what is the hand-over process, is processing for an entity only handled on one node, or across nodes, how is divergent content or processing results handled, etc?

3) It has to be able to monitor its own health (and communicate this with others), so if load is increasing, it would be able to initiate new nodes to start, and if decreasing, it might opt to die.  Further, it should monitor itself for indications of hacking, and immediately kill itself (whilst sending out a warning to nearby nodes).

4) Nodes need to be able to find other nodes locally (thinking UDP multicast here), and globally (GPS-based addressing and Routing ?, or a structure similar to DNS of special inter-swarm nodes).  There will need to be protocols for handing over entities as they move around (eg Companions that follow people, Geobots that can move themselves, Tokens that can follow the flow of a transaction), but at the same time, we need to ensure data is never lost, and of course is secure and unhackable.

5) I’m thinking that nodes might be able to operate in two modes, sort of ‘edge of the swarm, MR Server mode’, and ‘central processing and storage node’.  There might even be other modes, such as ‘subswarm intercommuncation nodes’ that link datacentres (acting like the equivalent of a DNS), and ‘monitoring nodes’ that look for hacker behaviour, and generally monitor the health of the system.

6) Hackability has to be our core concern - we have to constantly think about how someone could subvert the system.  In our flock of birds analogy, how a drone that looks and acts like a bird, but controlled by an external force, might direct the flock into specific, undesirable, perhaps destructive, behaviours.  Checks need to be there at all times, for example, inter-node communications also need to check whether nodes they are communicating with are genuine, untampered nodes.
