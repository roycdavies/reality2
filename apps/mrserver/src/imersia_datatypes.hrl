% ----------------------------------------------------------------------------------------------------
% Copyright Imersia Ltd 2019
% Author: Dr. Roy C. Davies
% Description: Data types for use in the database and API
% ----------------------------------------------------------------------------------------------------

%% @hidden

-define(MAX_SESSION_TIME, 4).       % Time for a session to expire in hours

-define(PASSCODE_EXP_TIME, 180).    % Time for a passcode to expire in seconds
-define(PASSCODE_MAX_NUMTRIES, 3).  % Maximum number of times to try to use a passcode-linked email address.

-type uuid() :: binary().
-type datetime() :: tuple().

% ----------------------------------------------------------------------------------------------------
% Basic user details.  Anything else can be saved in the companion's metadata
% ----------------------------------------------------------------------------------------------------
-record (user_details, {
    firstname = null :: binary(),
    surname = null :: binary(),
    nickname = null :: binary(),
    imageurl = null :: binary()
}).
% ----------------------------------------------------------------------------------------------------



% ----------------------------------------------------------------------------------------------------
% A location with altitude and geohash
% latitude = 0.0 :: float(),
% longitude = 180.0 :: float(),
% altitude = 0.0 :: float(),
% geohash = <<"xbpbpbpbp">> :: binary()
% ----------------------------------------------------------------------------------------------------
-record (location, {
    latitude = null :: float(),
    longitude = null :: float(),
    altitude = null :: float(),
    geohash = null :: binary()
}).
% ----------------------------------------------------------------------------------------------------



% ----------------------------------------------------------------------------------------------------
% User record
% ----------------------------------------------------------------------------------------------------
-record (user, {
    userid = null :: uuid(),
    useremail = null :: binary(),
    password = null :: binary(),
    details = null :: #user_details{},
    location = #location{},
    created = null :: datetime(),
    modified = null :: datetime()
}).
% ----------------------------------------------------------------------------------------------------



% ----------------------------------------------------------------------------------------------------
% A user login session
% ----------------------------------------------------------------------------------------------------
-record (session, {
    sessionid = null :: uuid(),
    token = null :: binary(),
    userid = null :: uuid(),
    created = null :: datetime()
}).
% ----------------------------------------------------------------------------------------------------



% ----------------------------------------------------------------------------------------------------
% A channel's core details
% ----------------------------------------------------------------------------------------------------
-record (channel, {
    channelid = null :: uuid(),
    ownerid = null :: uuid(),
    name = null :: binary(),
    description = null :: binary(),
    class = null :: binary(),
    imageurl = null :: binary(),
    hidden = null :: atom(),
    created = null :: datetime(),
    modified = null :: datetime()
}).
% ----------------------------------------------------------------------------------------------------



% ----------------------------------------------------------------------------------------------------
% An action for the Velocity Engine
% ----------------------------------------------------------------------------------------------------
-record (action, {
    command = null :: binary(),
    parameters = [] :: list(any())
}).
% ----------------------------------------------------------------------------------------------------



% ----------------------------------------------------------------------------------------------------
% A transition in the velocity engine
% ----------------------------------------------------------------------------------------------------
-record (transition, {
    state = null :: binary(),
    event = null :: binary(),
    newstate = null :: binary(),
    actions = [] :: list(#action{})
}).
% ----------------------------------------------------------------------------------------------------



% ----------------------------------------------------------------------------------------------------
% An automation in the velocity engine
% ----------------------------------------------------------------------------------------------------
-record (automation, {
    automationid = null :: uuid(),
    name = null :: binary(),
    description = null :: binary(),
    commands = [] :: list(binary()),
    transitions = [] :: list(#transition{})
}).
% ----------------------------------------------------------------------------------------------------



% ----------------------------------------------------------------------------------------------------
% A Geobot's core details
% ----------------------------------------------------------------------------------------------------
-record (geobot, {
    geobotid = null :: uuid(),
    channelid = null :: uuid(),
    ownerid = null :: uuid(),
    name = null :: binary(),
    description = null :: binary(),
    class = null :: binary(),
    imageurl = null :: binary(),
    location = #location{},
    radius = null :: float(),
    hidden = null :: atom(),
    created = null :: datetime(),
    modified = null :: datetime()
}).
% ----------------------------------------------------------------------------------------------------



% ----------------------------------------------------------------------------------------------------
% A simpler record of a Geobot used in the summary table of all Geobots (mnesia)
% ----------------------------------------------------------------------------------------------------
-record (geobotlite, {
    geobotid = null :: uuid(),
    channelid = null :: uuid(),
    ownerid = null :: uuid(),
    location = #location{},
    radius = 0.0 :: float()
}).
% ----------------------------------------------------------------------------------------------------



% ----------------------------------------------------------------------------------------------------
% A metadata entry
% ----------------------------------------------------------------------------------------------------
-record (metadata, {
    metadataid = null :: uuid(),
    key = null :: binary(),
    value = null :: binary()
}).
% ----------------------------------------------------------------------------------------------------



% ----------------------------------------------------------------------------------------------------
% A line of statistics in the analytics database
% ----------------------------------------------------------------------------------------------------
-record (analytic, {
    analyticid = null :: uuid(),
    statid = null :: binary(),
    location = #location{},
    created = null :: datetime(),
    event = null :: binary(),
    tally = 0 :: integer(),
    params = [] :: list(tuple()),
    indexes = [] :: list(tuple())
}).
% ----------------------------------------------------------------------------------------------------



% ----------------------------------------------------------------------------------------------------
% A shorter analytics record for returning data
% ----------------------------------------------------------------------------------------------------
-record (analyticlite, {
    statid = null :: binary(),
    tally = 0 :: integer(),
    params = [] :: list(tuple()),
    indexes = [] :: list(tuple())
}).
% ----------------------------------------------------------------------------------------------------



% ----------------------------------------------------------------------------------------------------
% A context entry
% ----------------------------------------------------------------------------------------------------
-record (context, {
    contextid = null :: uuid(),
    attributes = [] :: list(binary())
}).
% ----------------------------------------------------------------------------------------------------



% ----------------------------------------------------------------------------------------------------
% ----------------------------------------------------------------------------------------------------
-record (passcode, {
    passcodeid = null :: uuid(),
    passcode = null :: binary(),
    useremail = null :: binary(),
    created = null :: datetime(),
    used = false :: atom(),
    count = 1 :: integer()
}).
% ----------------------------------------------------------------------------------------------------
