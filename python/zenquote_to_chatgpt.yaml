sentant:
  name: Zen ChatGPT
  description: Get a quote for the day

  # ----------------------------------------------------------------------------------------------------
  # Plugins (A list, so begin with a dash)
  # ----------------------------------------------------------------------------------------------------
  plugins:
    - name: com.openai.api # This is the name of the plugin, used in the Automation below
      url: https://api.openai.com/v1/chat/completions # This is the URL to the API endpoint
      method: POST # This is the HTTP method to use

      # These are the headers to send (see ChatGPT API documentation)
      headers:
        "Content-Type": "application/json"
        # This is a secret, so it is not shown here (replace before passing to Reality2)
        "Authorization": "Bearer __openai_api_key__"

      # This is the body to send (see ChatGPT API documentation).  Note the __message__ placeholder.
      body:
        model: "gpt-3.5-turbo-1106"
        messages:
          - role: "system"
            content: "You are a helpful assistant from the 1950s."
          - role: "user"
            content: __message__

      # How to process the output from the API.  The value is a simplified JSON path expression.
      output:
        key: chatgpt_says
        value: "choices.0.message.content"
        event: chatgpt_response

    - name: com.zenquote.api
      url: https://zenquotes.io/api/random
      method: GET
      headers:
        "Content-Type": "application/json"
      output:
        key: zenquote
        value: "0.q"
        event: chatgpt
  # ----------------------------------------------------------------------------------------------------



  # ----------------------------------------------------------------------------------------------------
  # Automations (A list, so begin with a dash)
  # ----------------------------------------------------------------------------------------------------
  automations:
    - name: Zen Quote
      description: Get quote
      transitions:
        - from: start
          event: init
          to: ready

        - from: "*"
          event: zenquote
          to: ready
          public: true
          actions:
            - plugin: com.zenquote.api
              command: send

        # Take the output from the zenquote plugin and send it to chatgpt
        - from: "*"
          event: chatgpt
          to: ready
          actions:
            - command: set
              parameters:
                key: message
                value: "what is the meaning of '__zenquote__'?"

            - plugin: com.openai.api
              command: send

            - command: signal
              parameters:
                event: zenquote_answer

        # Deals with the answer from chatgpt and illustrates how to use the output.
        - from: "*"
          event: chatgpt_response
          to: ready
          actions:
            - command: set # Set the variable: answer
              parameters:
                key: answer
                value: "The answer is: __chatgpt_says__"

            - command: signal
              parameters:
                public: true
                event: chatgpt_answer
  # ----------------------------------------------------------------------------------------------------
 